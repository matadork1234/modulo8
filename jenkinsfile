pipeline {
    agent {
        node {
            label 'NodoServer'
        }
    }

    stages {
        stage('Build') {
            steps {
                 script {
                    def output = bat(returnStdout: true, script: 'dir /b /a "trabajo-final-mod-6"')
                    if (output.contains('trabajo-final-mod-6')) {
                        bat 'cd trabajo-final-mod-6'
                    } else {
                        bat 'git clone https://github.com/matadork1234/trabajo-final-mod-6.git'
                        bat 'cd trabajo-final-mod-6'
                    }
                }
                bat 'echo {{FULLNAME}}'
                bat 'cd trabajo-final-mod-6 && npm install'
                bat 'cd trabajo-final-mod-6 && docker-compose up -d'
                bat 'docker tag trabajo-final-mod-6-vueapp:latest localhost:8082/repositories/trabajo-final-mod-6-vueapp:1.0'
                bat 'docker push localhost:8082/repositories/trabajo-final-mod-6-vueapp:1.0'
            }
        }

        stage('DEVELOPMENT') {
            environment {
                APP_ENV = 'DEV'
            }
            steps {
                bat 'echo $APP_ENV'
                bat 'curl http://localhost:5000'
                bat 'cd trabajo-final-mod-6 && npm run build'
            }
        }

        stage('QA') {
            environment {
                APP_ENV = 'QA'
            }
            steps {
                bat 'echo $APP_ENV'
                bat 'grype docker:trabajo-final-mod-6-vueapp'
                bat 'curl http://localhost:3000/products'
                bat 'cd trabajo-final-mod-6 && npm run lint'
            }
        }

        stage('PRODUCTION') {
            environment {
                APP_ENV = 'PROD'
            }
            steps {
                bat 'echo $APP_ENV'
                bat 'docker pull localhost:8082/repositories/trabajo-final-mod-6-vueapp:1.0'
                bat 'docker run -d --name imagenexus -p 8088:80 localhost:8082/repositories/trabajo-final-mod-6-vueapp:1.0'
            }
        }
    }
}